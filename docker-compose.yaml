version: "1"

services:
  backend:
    restart: always
    container_name: backend
    command: "poetry run python3 ./manage.py runserver 0.0.0.0:8000"
    build: .
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - prod
      - debug

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "backend"
      POSTGRES_PASSWORD: "pleasechangeme"
      POSTGRES_USER: "admin"
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    profiles:
      - prod
      - dev
      - debug
      - db

  frontend:
    container_name: frontend
    restart: always
    build: ./frontend
    ports:
      - "80:80"
    profiles:
      - prod
      - debug

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
       postgres:
         condition: service_healthy
    volumes:
      - pgadmin-data:/var/lib/pgadmin'
    profiles:
      - dev
      - debug
      - db

volumes:
  db-data:
  pgadmin-data:
