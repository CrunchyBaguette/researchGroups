version: "3"

services:
  backend:
    restart: always
    container_name: backend
    command: "poetry run python3 ./manage.py runserver 0.0.0.0:8000"
    build: .
    env_file: .env
    ports:
      - "8000:8000"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      DATABASE_HOST: postgres
    depends_on:
      - postgres
    profiles:
      - prod
      - debug

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    user: postgres
    env_file: .env
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
    expose:
      - 5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    profiles:
      - prod
      - dev
      - debug
      - db

  frontend:
    container_name: frontend
    restart: always
    build: ./frontend
    ports:
      - "80:80"
    profiles:
      - prod
      - debug

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
     - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin'
    profiles:
      - dev
      - debug
      - db

volumes:
  db-data:
  pgadmin-data:
