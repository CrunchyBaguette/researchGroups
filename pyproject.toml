[tool.poetry]
name = "researchgroups"
version = "0.1.0"
description = ""
authors = ["Krzysztof Bogaczyk <bogaczyk.krzysztof00@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
Django = "^4.1.2"
psycopg2-binary = "^2.9.5"
djangorestframework = "^3.14.0"
markdown = "^3.4.1"
django-filter = "^22.1"
django-cors-headers = "^3.13.0"
python-dotenv = "^0.21.0"
django-email-log = "^1.2.0"
djangorestframework-simplejwt = "^5.2.2"


[tool.poetry.group.dev.dependencies]
black = {version = "^22.10.0", allow-prereleases = true}
mypy = "^0.991"
djangorestframework-stubs = {extras = ["compatible-mypy"], version = "^1.8.0"}
pylint = "^2.15.6"
pylint-django = "^2.5.3"

[tool.poetry.group.test.dependencies]
pytest-django = "^4.5.2"
pytest-order = "^1.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
exclude = "migrations"

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "cyclic-import",
    "duplicate-code",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "protected-access",
    "super-init-not-called",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-return-statements",
    "ungrouped-imports",
    "unnecessary-ellipsis",
    "imported-auth-user",
    "abstract-method"  # ze wzglÄ™du na token serializer na razie
]
enable = "useless-suppression"
extension-pkg-allow-list = ["pydantic", "orjson", "picologging"]

[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.VARIABLES]
ignored-argument-names = "args|kwargs|_|__"

[tool.pylint.MASTER]
init-hook='import sys, os; sys.path.append(os.getcwd())'
load-plugins = [
    "pylint_django"
]
ignore = [
    "tests",
    "migrations",
    "urls.py"
]
django-settings-module = "backend.test_settings"
